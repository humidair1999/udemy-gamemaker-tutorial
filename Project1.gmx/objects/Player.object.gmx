<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the Player object

spd = 8;
acc = 0.8;
hspd = 0;
vspd = 0;
grav = 1.5;
state = move_state;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the player's states

script_execute(state);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Exit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go to the next level

if (keyboard_check(vk_up)) {
    y = yprevious;
    
    state = exit_state;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="EnemyParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// collide with an enemy

var above_enemy = y &lt; other.y + vspd;
var falling = vspd &gt; 0;

if (above_enemy &amp;&amp; (falling || state = ledge_grab_state)) {
    // if there's no solid block directly above our previous state,
    // shift the player back up to this position; covers case in which
    // two enemies are overlapped. could this be mitigated by moving
    // the bounce logic before the destroy()?
    if (!place_meeting(x, yprevious, Solid)) {
        y = yprevious;
    }
    
    // after previous y shift, player might be more than 1 pixel above
    // enemy; slide enemy down to exactly 1 pixel above enemy
    while (!place_meeting(x, y + 1, other)) {
        y++;
    }

    // kill the enemy
    with (other) {
        instance_destroy();
    }
    
    vspd = -(16 / 1.5);
}
else {
    // take damage
    if (state != hurt_state) {
        image_blend = make_colour_rgb(220, 150, 150);
        vspd = -12;
        hspd = (sign(x - other.x) * 10);
        
        state = hurt_state;
        
        move(Solid);
        
        if (instance_exists(PlayerStats)) {
            PlayerStats.hp -= 1;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
